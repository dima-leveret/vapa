[{"/home/julka-i-dima/vapa/src/index.js":"1","/home/julka-i-dima/vapa/src/reportWebVitals.js":"2","/home/julka-i-dima/vapa/src/App.js":"3","/home/julka-i-dima/vapa/src/components/navigation/NavBar.js":"4","/home/julka-i-dima/vapa/src/components/partners/Partners.js":"5","/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js":"6","/home/julka-i-dima/vapa/src/components/content/AboutVapa.js":"7","/home/julka-i-dima/vapa/src/components/content/Contacts.js":"8","/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js":"9","/home/julka-i-dima/vapa/src/components/footer/Footer.js":"10","/home/julka-i-dima/vapa/src/components/products/AddProduct.js":"11","/home/julka-i-dima/vapa/src/store.js":"12","/home/julka-i-dima/vapa/src/state/products.js":"13","/home/julka-i-dima/vapa/src/components/products/Products.js":"14","/home/julka-i-dima/vapa/src/state/shoppingCard.js":"15","/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js":"16","/home/julka-i-dima/vapa/src/components/products/ProductCard.js":"17","/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js":"18","/home/julka-i-dima/vapa/src/components/home/Home.js":"19","/home/julka-i-dima/vapa/src/components/Map/Map.js":"20","/home/julka-i-dima/vapa/src/components/products/EditProduct.js":"21","/home/julka-i-dima/vapa/src/components/sign/Sign.js":"22"},{"size":1179,"mtime":1614158667406,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1608816650805,"results":"25","hashOfConfig":"24"},{"size":291,"mtime":1612856369508,"results":"26","hashOfConfig":"24"},{"size":2822,"mtime":1614165207009,"results":"27","hashOfConfig":"24"},{"size":3777,"mtime":1613922907856,"results":"28","hashOfConfig":"24"},{"size":2033,"mtime":1612617745926,"results":"29","hashOfConfig":"24"},{"size":6041,"mtime":1612435751049,"results":"30","hashOfConfig":"24"},{"size":1445,"mtime":1612616676437,"results":"31","hashOfConfig":"24"},{"size":6602,"mtime":1612768720338,"results":"32","hashOfConfig":"24"},{"size":1417,"mtime":1612617655890,"results":"33","hashOfConfig":"24"},{"size":11290,"mtime":1612974885040,"results":"34","hashOfConfig":"24"},{"size":844,"mtime":1611533392168,"results":"35","hashOfConfig":"24"},{"size":4495,"mtime":1612861397809,"results":"36","hashOfConfig":"24"},{"size":4381,"mtime":1612968795828,"results":"37","hashOfConfig":"24"},{"size":1308,"mtime":1612439004336,"results":"38","hashOfConfig":"24"},{"size":7992,"mtime":1614160698069,"results":"39","hashOfConfig":"24"},{"size":5720,"mtime":1612968967669,"results":"40","hashOfConfig":"24"},{"size":2056,"mtime":1612950696478,"results":"41","hashOfConfig":"24"},{"size":628,"mtime":1611925764176,"results":"42","hashOfConfig":"24"},{"size":635,"mtime":1612475073366,"results":"43","hashOfConfig":"24"},{"size":10917,"mtime":1612976978179,"results":"44","hashOfConfig":"24"},{"size":1948,"mtime":1614169735227,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1kw0mff",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/julka-i-dima/vapa/src/index.js",[],["95","96"],"/home/julka-i-dima/vapa/src/reportWebVitals.js",[],"/home/julka-i-dima/vapa/src/App.js",["97"],"import './App.css';\nimport NavBar from \"./components/navigation/NavBar\";\nimport Home from './components/home/Home';\nimport Footer from './components/footer/Footer';\n\nfunction App() {\n  return (\n    <>\n      <NavBar/>\n      {/* <Home/> */}\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","/home/julka-i-dima/vapa/src/components/navigation/NavBar.js",[],"/home/julka-i-dima/vapa/src/components/partners/Partners.js",[],"/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js",[],"/home/julka-i-dima/vapa/src/components/content/AboutVapa.js",[],"/home/julka-i-dima/vapa/src/components/content/Contacts.js",[],"/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js",[],"/home/julka-i-dima/vapa/src/components/footer/Footer.js",[],"/home/julka-i-dima/vapa/src/components/products/AddProduct.js",[],"/home/julka-i-dima/vapa/src/store.js",[],"/home/julka-i-dima/vapa/src/state/products.js",[],"/home/julka-i-dima/vapa/src/components/products/Products.js",[],"/home/julka-i-dima/vapa/src/state/shoppingCard.js",[],"/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js",["98","99"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {RiShoppingBagLine} from 'react-icons/ri';\nimport img123 from '../../img/img123.jpg';\nimport { removeFromCard, increment, decrement } from '../../state/shoppingCard';\n\nimport './ShoppingCard.css'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge'\n\nclass ShoppingCard extends React.Component {\n\n    state = {\n        isOpen: false,\n    }\n\n\n    openModal = () => {\n        this.setState({\n            isOpen: true,\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            isOpen: false,\n        })\n    }\n\n\n    getTotalPrice = () => {\n        return this.props.productsInShoppingCard.reduce((accumulator, current)=> {\n             return accumulator + current.price * current.number;\n        }, 0)\n    }\n    \n    \n    \n    render() {\n        let oneProductPrice = (a, b) => {\n            return a * b\n        }\n        \n        return(\n            <>\n                <Button  variant=\"outline-success\" size='lg' onClick={this.openModal} >\n                    <RiShoppingBagLine/>\n                    <Badge pill variant='dark' > {this.props.productsInShoppingCard.length} </Badge>\n                </Button>\n                <Modal\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    show={this.state.isOpen}\n                    onHide={this.closeModal} \n                    >\n                    <Modal.Header closeButton>\n                    <Modal.Title> Your order </Modal.Title>\n                    </Modal.Header>\n                        \n                    <Modal.Body>\n                        Products list:\n                        {\n                            this.props.productsInShoppingCard.length > 0\n                            ? (\n                            <Table bordered  >\n                            <thead>\n                                <tr>\n                                    <td>Продукт</td>\n                                    <td>Назва</td>\n                                    <td>Кількість</td>\n                                    <td>Ціна</td>\n                                    <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.props.productsInShoppingCard.map(productInCard => (  \n                                        <tr key={this.props.productsInShoppingCard.indexOf(productInCard)} >\n                                            <td>\n                                                <Card.Img variant=\"top\" src={img123} alt='some picture' className='imgInShoppingCard'/>\n                                            </td>\n                                            <td>{productInCard.product} \"{productInCard.name}\"</td>\n                                            <td>\n                                                <div className='counter' >\n                                                    {\n                                                        productInCard.number == '1'\n                                                    ?\n                                                    <ButtonGroup>\n                                                        <Button variant='danger' disabled\n                                                        onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                        <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                        <Button variant='primary' \n                                                        onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                    </ButtonGroup>\n                                                    :<div>\n                                                        {\n                                                         productInCard.number == productInCard.amount\n                                                         ?\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' disabled\n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                         :\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' \n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                        }\n                                                    </div>\n                                                    }\n                                                </div>\n                                            </td>\n                                            <td> {oneProductPrice(productInCard.price, productInCard.number)}</td>\n                                            <td>\n                                                <Button\n                                                className='buttnonInShoppingCard'\n                                                variant='danger'\n                                                onClick={() => this.props.removeFromCard(productInCard.id)} \n                                                > Remove  </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n\n                            </tbody>\n                            </Table>\n                            )\n                            : <p>\n                                Your cart is empty :(\n                            </p>\n                        }\n                        \n                        <div className=\"totalPrice\" >\n                            <h2 >\n                                Sum: <Badge variant='info' > {this.getTotalPrice()} </Badge> UAH\n                            </h2>\n                        </div>        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.closeModal}>Back</Button>\n                        <Button variant='success' >\n                            Result and payment\n                        </Button>\n                    </Modal.Footer>\n\n                </Modal>\n            </>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state) => ({\n    productsInShoppingCard: state.shoppingCard,\n})\n\nconst mapDispatchToProps = {\n    removeFromCard,\n    increment,\n    decrement\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCard);","/home/julka-i-dima/vapa/src/components/products/ProductCard.js",["100"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToCard } from '../../state/shoppingCard';\nimport { deleteProduct } from '../../state/products';\n\nimport EditProduct from \"./EditProduct\";\nimport ProductDetailsModal from \"./ProductDetailsModal\" \n\nimport './ProductCard.css';\n\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport img123 from '../../img/img123.jpg';\n\n\n\nclass ProductCard extends React.Component {\n\n    state = {\n        showEdit: false, \n        editId: null,\n        showDetails: false, \n        detailsId: null,\n    }\n\n    openModalEdit = (oneProductId) => {\n        this.setState({\n            editId: oneProductId,\n            showEdit: true,\n        })\n        console.log(oneProductId);\n    }\n\n    closeModalEdit = () => {\n        this.setState({\n            editId: null,\n            showEdit: false,\n        })\n    }\n\n    openModalDetails = (oneProductId) => {\n        this.setState({\n            detailsId: oneProductId,\n            showDetails: true,\n        })\n    }\n\n    closeModalDetails = () => {\n        this.setState({\n            detailsId: null,\n            showDetails: false,\n        })\n    }\n\n    render (){\n        return (\n            <>\n            <Card  className='card' >\n                <Card.Img variant=\"top\" src={img123} alt='some picture' className='cardImg'/>\n                <Card.Body>\n                    <Card.Title> {this.props.productProduct} { this.props.productName} </Card.Title>\n                    <Card.Text> { this.props.productDescription} </Card.Text>\n                </Card.Body>\n                <p> {this.props.productPrice} UAH </p>\n                <div className=\"buttons\" >\n                    <Button \n                    onClick={() => this.openModalDetails(this.props.productId)}\n                    className=\"cardButton\" > Details \n                    </Button>\n                    {\n                        this.props.productAmount == '0' \n                        ? \n                        <p className=\"cardButtonP\" > Not available </p>\n                        : \n                        <div>\n                            {\n                                this.props.isProductInCart(this.props.productId)\n                                ? <p className=\"cardButtonP\" > Product added </p>\n                                :<Button\n                                className=\"cardButton\" \n                                onClick={() => this.props.addToCard(this.props.product)}\n                                > Add to cart </Button>\n                            }\n                        </div>      \n                    }\n                </div>\n                <div className='buttons' >\n                    <Button\n                    className=\"cardButtonED\"\n                    onClick={() => this.openModalEdit(this.props.productId)}\n                    >Edit</Button>\n    \n                    <Button\n                    className=\"cardButtonED\"\n                    onClick={() => this.props.deleteProduct(this.props.productId)}\n                    >Delete</Button>\n    \n                </div>\n            </Card>\n\n            <ProductDetailsModal\n                show={this.state.showDetails}\n                onHide={() => this.closeModalDetails()}\n                isProductInCart={this.props.isProductInCart}\n                product={this.props.product}\n\n                productName={this.props.productName}\n                productProduct={this.props.productProduct}\n                productPrice={this.props.productPrice}\n                productFullDescription={this.props.productFullDescription}\n                productDetails={this.props.productDetails}\n                productUsage={this.props.productUsage}\n                productStructure={this.props.productStructure}\n                productPreservation={this.props.productPreservation}\n                productDate={this.props.productDate}\n                productVolume={this.props.productVolume}\n                productAmount={this.props.productAmount}\n                productId={this.props.productId}\n                available={this.props.productAmount}\n                productType={this.props.productType}\n            />\n\n            <EditProduct\n            show={this.state.showEdit}\n            onHide={() => this.closeModalEdit()}\n            closeModalEdit={() => this.closeModalEdit()}\n\n            productDescription={this.props.productDescription}\n            productName={this.props.productName}\n            productProduct={this.props.productProduct}\n            productPrice={this.props.productPrice}\n            productFullDescription={this.props.productFullDescription}\n            productDetails={this.props.productDetails}\n            productUsage={this.props.productUsage}\n            productStructure={this.props.productStructure}\n            productPreservation={this.props.productPreservation}\n            productDate={this.props.productDate}\n            productVolume={this.props.productVolume}\n            productAmount={this.props.productAmount}\n            productId={this.props.productId}\n            available={this.props.productAmount}\n            productType={this.props.productType}\n            productDiscount={this.props.productDiscount}\n            productComplex={this.props.productComplex}\n            productNewPrice={this.props.productNewPrice}\n            productSize={this.props.productSize}\n\n            />\n            </>\n            )\n    }\n\n    \n    }\n\n\nconst mapStateToProps = (state) => ({\n    productsInCart: state.shoppingCard,\n})\n\n\nconst mapDispatchToProps = {\n    addToCard,\n    deleteProduct\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductCard);","/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js",["101"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { addToCard } from '../../state/shoppingCard';\n\nimport './ProductDetailsModal.css';\n\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\n\nfunction ProductDetailsModal (props) {\n\n    return (\n      <Modal\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n        show={props.show}\n        onHide={props.onHide} \n       >\n        <Modal.Header closeButton>\n          <Modal.Title> {props.productProduct} {props.productName} </Modal.Title>\n        </Modal.Header>\n                    \n        <Modal.Body>\n          <p> {props.productPrice} UAH </p>\n          {\n            props.productAmount == '0' \n            ? \n            <p style={{ color: 'red' }} > Not available </p>\n            : \n            <div>\n              {\n                props.isProductInCart(props.productId)\n                ? <p className=\"paragraf\" > Product added </p>\n                :<Button\n                  className=\"cardButton\" \n                  onClick={() => props.addToCard(props.product)}\n                  > Add to cart </Button>\n              }\n            </div>\n          }\n          <hr/>\n          <strong>{props.productFullDescription}</strong>\n          <br/>\n          <br/>\n          <p>{props.productDetails}</p>\n          <strong>How to use:</strong>\n          <p>{props.productUsage}</p>\n          <strong>Structure:</strong>\n          <p>{props.productStructure}</p>\n          <strong>Preservation:</strong>\n          <p>{props.productPreservation}</p>\n          <strong>Date:</strong>\n          <p>{props.productDate}</p>\n          <strong>Volume:</strong>\n          <p>{props.productVolume}</p>\n          <strong>Is available:</strong>\n          <p>{props.available} units</p>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n  const mapStateToProps = (state) => ({})\n\n\n  const mapDispatchToProps = {\n      addToCard,\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetailsModal);","/home/julka-i-dima/vapa/src/components/home/Home.js",[],"/home/julka-i-dima/vapa/src/components/Map/Map.js",[],"/home/julka-i-dima/vapa/src/components/products/EditProduct.js",[],"/home/julka-i-dima/vapa/src/components/sign/Sign.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":92,"column":78,"nodeType":"112","messageId":"113","endLine":92,"endColumn":80},{"ruleId":"110","severity":1,"message":"111","line":103,"column":79,"nodeType":"112","messageId":"113","endLine":103,"endColumn":81},{"ruleId":"110","severity":1,"message":"111","line":71,"column":50,"nodeType":"112","messageId":"113","endLine":71,"endColumn":52},{"ruleId":"110","severity":1,"message":"111","line":28,"column":33,"nodeType":"112","messageId":"113","endLine":28,"endColumn":35},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]