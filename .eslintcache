[{"/home/julka-i-dima/vapa/src/index.js":"1","/home/julka-i-dima/vapa/src/reportWebVitals.js":"2","/home/julka-i-dima/vapa/src/App.js":"3","/home/julka-i-dima/vapa/src/components/navigation/NavBar.js":"4","/home/julka-i-dima/vapa/src/components/partners/Partners.js":"5","/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js":"6","/home/julka-i-dima/vapa/src/components/content/AboutVapa.js":"7","/home/julka-i-dima/vapa/src/components/content/Contacts.js":"8","/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js":"9","/home/julka-i-dima/vapa/src/components/footer/Footer.js":"10","/home/julka-i-dima/vapa/src/components/products/AddProduct.js":"11","/home/julka-i-dima/vapa/src/store.js":"12","/home/julka-i-dima/vapa/src/state/products.js":"13","/home/julka-i-dima/vapa/src/components/products/Products.js":"14","/home/julka-i-dima/vapa/src/state/shoppingCard.js":"15","/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js":"16","/home/julka-i-dima/vapa/src/components/products/ProductCard.js":"17","/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js":"18","/home/julka-i-dima/vapa/src/components/home/Home.js":"19","/home/julka-i-dima/vapa/src/components/Map/Map.js":"20","/home/julka-i-dima/vapa/src/components/products/EditProduct.js":"21"},{"size":1112,"mtime":1610529794362,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1608816650805,"results":"24","hashOfConfig":"23"},{"size":291,"mtime":1612856369508,"results":"25","hashOfConfig":"23"},{"size":2584,"mtime":1613922570845,"results":"26","hashOfConfig":"23"},{"size":3777,"mtime":1613922907856,"results":"27","hashOfConfig":"23"},{"size":2033,"mtime":1612617745926,"results":"28","hashOfConfig":"23"},{"size":6041,"mtime":1612435751049,"results":"29","hashOfConfig":"23"},{"size":1445,"mtime":1612616676437,"results":"30","hashOfConfig":"23"},{"size":6602,"mtime":1612768720338,"results":"31","hashOfConfig":"23"},{"size":1417,"mtime":1612617655890,"results":"32","hashOfConfig":"23"},{"size":11290,"mtime":1612974885040,"results":"33","hashOfConfig":"23"},{"size":844,"mtime":1611533392168,"results":"34","hashOfConfig":"23"},{"size":4495,"mtime":1612861397809,"results":"35","hashOfConfig":"23"},{"size":4381,"mtime":1612968795828,"results":"36","hashOfConfig":"23"},{"size":1308,"mtime":1612439004336,"results":"37","hashOfConfig":"23"},{"size":7992,"mtime":1612943311352,"results":"38","hashOfConfig":"23"},{"size":5720,"mtime":1612968967669,"results":"39","hashOfConfig":"23"},{"size":2056,"mtime":1612950696478,"results":"40","hashOfConfig":"23"},{"size":628,"mtime":1611925764176,"results":"41","hashOfConfig":"23"},{"size":635,"mtime":1612475073366,"results":"42","hashOfConfig":"23"},{"size":10917,"mtime":1612976978179,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kw0mff",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/julka-i-dima/vapa/src/index.js",[],"/home/julka-i-dima/vapa/src/reportWebVitals.js",[],"/home/julka-i-dima/vapa/src/App.js",["88"],"/home/julka-i-dima/vapa/src/components/navigation/NavBar.js",[],"/home/julka-i-dima/vapa/src/components/partners/Partners.js",[],"/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js",[],"/home/julka-i-dima/vapa/src/components/content/AboutVapa.js",[],["89","90"],"/home/julka-i-dima/vapa/src/components/content/Contacts.js",[],"/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js",[],"/home/julka-i-dima/vapa/src/components/footer/Footer.js",[],"/home/julka-i-dima/vapa/src/components/products/AddProduct.js",[],"/home/julka-i-dima/vapa/src/store.js",[],"/home/julka-i-dima/vapa/src/state/products.js",[],"/home/julka-i-dima/vapa/src/components/products/Products.js",[],"/home/julka-i-dima/vapa/src/state/shoppingCard.js",[],"/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js",["91","92"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {RiShoppingBagLine} from 'react-icons/ri';\nimport img123 from '../../img/img123.jpg';\nimport { removeFromCard, increment, decrement } from '../../state/shoppingCard';\n\nimport './ShoppingCard.css'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge'\n\nclass ShoppingCard extends React.Component {\n\n    state = {\n        isOpen: false,\n    }\n\n\n    openModal = () => {\n        this.setState({\n            isOpen: true,\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            isOpen: false,\n        })\n    }\n\n\n    getTotalPrice = () => {\n        return this.props.productsInShoppingCard.reduce((accumulator, current)=> {\n             return accumulator + current.price * current.number;\n        }, 0)\n    }\n    \n    \n    \n    render() {\n        let oneProductPrice = (a, b) => {\n            return a * b\n        }\n        \n        return(\n            <>\n                <Button  variant=\"outline-success\" size='lg' onClick={this.openModal} >\n                    <RiShoppingBagLine/>\n                    <Badge pill variant='dark' > {this.props.productsInShoppingCard.length} </Badge>\n                </Button>\n                <Modal\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    show={this.state.isOpen}\n                    onHide={this.closeModal} \n                    >\n                    <Modal.Header closeButton>\n                    <Modal.Title> Your order </Modal.Title>\n                    </Modal.Header>\n                        \n                    <Modal.Body>\n                        Products list:\n                        {\n                            this.props.productsInShoppingCard.length > 0\n                            ? (\n                            <Table bordered  >\n                            <thead>\n                                <tr>\n                                    <td>Продукт</td>\n                                    <td>Назва</td>\n                                    <td>Кількість</td>\n                                    <td>Ціна</td>\n                                    <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.props.productsInShoppingCard.map(productInCard => (  \n                                        <tr key={this.props.productsInShoppingCard.indexOf(productInCard)} >\n                                            <td>\n                                                <Card.Img variant=\"top\" src={img123} alt='some picture' className='imgInShoppingCard'/>\n                                            </td>\n                                            <td>{productInCard.product} \"{productInCard.name}\"</td>\n                                            <td>\n                                                <div className='counter' >\n                                                    {\n                                                        productInCard.number == '1'\n                                                    ?\n                                                    <ButtonGroup>\n                                                        <Button variant='danger' disabled\n                                                        onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                        <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                        <Button variant='primary' \n                                                        onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                    </ButtonGroup>\n                                                    :<div>\n                                                        {\n                                                         productInCard.number == productInCard.amount\n                                                         ?\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' disabled\n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                         :\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' \n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                        }\n                                                    </div>\n                                                    }\n                                                </div>\n                                            </td>\n                                            <td> {oneProductPrice(productInCard.price, productInCard.number)}</td>\n                                            <td>\n                                                <Button\n                                                className='buttnonInShoppingCard'\n                                                variant='danger'\n                                                onClick={() => this.props.removeFromCard(productInCard.id)} \n                                                > Remove  </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n\n                            </tbody>\n                            </Table>\n                            )\n                            : <p>\n                                Your cart is empty :(\n                            </p>\n                        }\n                        \n                        <div className=\"totalPrice\" >\n                            <h2 >\n                                Sum: <Badge variant='info' > {this.getTotalPrice()} </Badge> UAH\n                            </h2>\n                        </div>        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.closeModal}>Back</Button>\n                        <Button variant='success' >\n                            Result and payment\n                        </Button>\n                    </Modal.Footer>\n\n                </Modal>\n            </>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state) => ({\n    productsInShoppingCard: state.shoppingCard,\n})\n\nconst mapDispatchToProps = {\n    removeFromCard,\n    increment,\n    decrement\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCard);","/home/julka-i-dima/vapa/src/components/products/ProductCard.js",["93"],"/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js",["94"],"/home/julka-i-dima/vapa/src/components/home/Home.js",[],"/home/julka-i-dima/vapa/src/components/Map/Map.js",[],"/home/julka-i-dima/vapa/src/components/products/EditProduct.js",[],{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":12},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":92,"column":78,"nodeType":"105","messageId":"106","endLine":92,"endColumn":80},{"ruleId":"103","severity":1,"message":"104","line":103,"column":79,"nodeType":"105","messageId":"106","endLine":103,"endColumn":81},{"ruleId":"103","severity":1,"message":"104","line":71,"column":50,"nodeType":"105","messageId":"106","endLine":71,"endColumn":52},{"ruleId":"103","severity":1,"message":"104","line":28,"column":33,"nodeType":"105","messageId":"106","endLine":28,"endColumn":35},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["107"],"no-negated-in-lhs",["108"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]