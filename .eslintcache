[{"/home/julka-i-dima/vapa/src/index.js":"1","/home/julka-i-dima/vapa/src/reportWebVitals.js":"2","/home/julka-i-dima/vapa/src/App.js":"3","/home/julka-i-dima/vapa/src/components/navigation/NavBar.js":"4","/home/julka-i-dima/vapa/src/components/partners/Partners.js":"5","/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js":"6","/home/julka-i-dima/vapa/src/components/content/AboutVapa.js":"7","/home/julka-i-dima/vapa/src/components/content/Contacts.js":"8","/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js":"9","/home/julka-i-dima/vapa/src/components/footer/Footer.js":"10","/home/julka-i-dima/vapa/src/components/products/AddProduct.js":"11","/home/julka-i-dima/vapa/src/store.js":"12","/home/julka-i-dima/vapa/src/state/products.js":"13","/home/julka-i-dima/vapa/src/components/products/Products.js":"14","/home/julka-i-dima/vapa/src/state/shoppingCard.js":"15","/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js":"16","/home/julka-i-dima/vapa/src/components/products/ProductCard.js":"17","/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js":"18","/home/julka-i-dima/vapa/src/components/home/Home.js":"19","/home/julka-i-dima/vapa/src/components/Map/Map.js":"20"},{"size":1112,"mtime":1610529794362,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1608816650805,"results":"23","hashOfConfig":"22"},{"size":291,"mtime":1612856369508,"results":"24","hashOfConfig":"22"},{"size":2447,"mtime":1612857547025,"results":"25","hashOfConfig":"22"},{"size":3718,"mtime":1612621704452,"results":"26","hashOfConfig":"22"},{"size":2033,"mtime":1612617745926,"results":"27","hashOfConfig":"22"},{"size":6041,"mtime":1612435751049,"results":"28","hashOfConfig":"22"},{"size":1445,"mtime":1612616676437,"results":"29","hashOfConfig":"22"},{"size":6602,"mtime":1612768720338,"results":"30","hashOfConfig":"22"},{"size":1417,"mtime":1612617655890,"results":"31","hashOfConfig":"22"},{"size":11232,"mtime":1612858086787,"results":"32","hashOfConfig":"22"},{"size":844,"mtime":1611533392168,"results":"33","hashOfConfig":"22"},{"size":4495,"mtime":1612861397809,"results":"34","hashOfConfig":"22"},{"size":3110,"mtime":1612791822159,"results":"35","hashOfConfig":"22"},{"size":1308,"mtime":1612439004336,"results":"36","hashOfConfig":"22"},{"size":7992,"mtime":1612790405731,"results":"37","hashOfConfig":"22"},{"size":2220,"mtime":1612861204372,"results":"38","hashOfConfig":"22"},{"size":2056,"mtime":1612857829864,"results":"39","hashOfConfig":"22"},{"size":628,"mtime":1611925764176,"results":"40","hashOfConfig":"22"},{"size":635,"mtime":1612475073366,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1kw0mff",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/julka-i-dima/vapa/src/index.js",[],["85","86"],"/home/julka-i-dima/vapa/src/reportWebVitals.js",[],"/home/julka-i-dima/vapa/src/App.js",["87"],"/home/julka-i-dima/vapa/src/components/navigation/NavBar.js",[],"/home/julka-i-dima/vapa/src/components/partners/Partners.js",[],"/home/julka-i-dima/vapa/src/components/navigation/NavProducts.js",[],"/home/julka-i-dima/vapa/src/components/content/AboutVapa.js",[],"/home/julka-i-dima/vapa/src/components/content/Contacts.js",[],"/home/julka-i-dima/vapa/src/components/content/PaymentAndDelivery.js",[],"/home/julka-i-dima/vapa/src/components/footer/Footer.js",[],"/home/julka-i-dima/vapa/src/components/products/AddProduct.js",[],"/home/julka-i-dima/vapa/src/store.js",[],"/home/julka-i-dima/vapa/src/state/products.js",[],"/home/julka-i-dima/vapa/src/components/products/Products.js",["88","89"],"import React from \"react\";\nimport { connect } from 'react-redux';\nimport './Products.css';\nimport { fetchProducts } from '../../state/products';\n\nimport ProductCard from \"./ProductCard\";\nimport ProductDetailsModal from \"./ProductDetailsModal\";\n\nimport { Spinner } from \"react-bootstrap\";\n\n\n class Products extends React.Component {\n\n    state = {\n        show: false, \n        productId: null,\n    }\n\n    componentDidMount(){\n         this.props.fetchProducts();\n     }\n\n    openModal = (oneProductId) => {\n        this.setState({\n            productId: oneProductId,\n            show: true,\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            productId: null,\n            show: false,\n        })\n    }\n\n    isProductInCart = (productIdInCart) => {\n        return this.props.productsInCart.some(product => product.id == productIdInCart)\n    }\n    \n    render() {\n        \n        return(\n            <>\n            {this.props.isLoading && <Spinner animation=\"grow\" variant=\"warning\" /> }\n            {\n                this.props.products.map(product => (\n                    this.state.productId == product.id\n                 ? \n                 <ProductDetailsModal\n                    key={product.id}\n                    show={this.state.show}\n                    onHide={() => this.closeModal()}\n                    productProduct={product.product}\n                    productName={product.name}\n                    productPrice={product.price}\n                    product={product}\n                    productFullDescription={product.fullDescription}\n                    productDetails={product.details}\n                    productUsage={product.usage}\n                    productStructure={product.structure}\n                    productPreservation={product.preservation}\n                    productDate={product.date}\n                    productVolume={product.volume}\n                    productAmount={product.amount}\n                    productId={product.id}\n                    isProductInCart={this.isProductInCart}\n                    available={product.amount}\n                    productType={product.type}\n                 \n                 />\n                 : \n                 <ProductCard\n                    key={product.id} \n                    productId={product.id}\n                    productProduct={product.product}\n                    productName={product.name}\n                    productDescription={product.description}\n                    productPrice={product.price}\n                    productAmount={product.amount}\n                    product={product}\n                    openModal={() => this.openModal(product.id)}\n                    isProductInCart={this.isProductInCart}\n                 />\n            ))\n            }\n            </>\n        ) \n    }\n}\n\nconst mapStateToProps = (state) => ({\n    products: state.products.data,\n    isLoading: state.products.isLoading,\n    productsInCart: state.shoppingCard,\n})\n\n\nconst mapDispatchToProps = {\n    fetchProducts,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","/home/julka-i-dima/vapa/src/state/shoppingCard.js",[],"/home/julka-i-dima/vapa/src/components/shoppingCard/ShoppingCard.js",["90","91"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {RiShoppingBagLine} from 'react-icons/ri';\nimport img123 from '../../img/img123.jpg';\nimport { removeFromCard, increment, decrement } from '../../state/shoppingCard';\n\nimport './ShoppingCard.css'\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Table from 'react-bootstrap/Table';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge'\n\nclass ShoppingCard extends React.Component {\n\n    state = {\n        isOpen: false,\n    }\n\n\n    openModal = () => {\n        this.setState({\n            isOpen: true,\n        })\n    }\n\n    closeModal = () => {\n        this.setState({\n            isOpen: false,\n        })\n    }\n\n\n    getTotalPrice = () => {\n        return this.props.productsInShoppingCard.reduce((accumulator, current)=> {\n             return accumulator + current.price * current.number;\n        }, 0)\n    }\n    \n    \n    \n    render() {\n        let oneProductPrice = (a, b) => {\n            return a * b\n        }\n        \n        return(\n            <>\n                <Button  variant=\"outline-success\" size='lg' onClick={this.openModal} >\n                    <RiShoppingBagLine/>\n                    <Badge pill variant='dark' > {this.props.productsInShoppingCard.length} </Badge>\n                </Button>\n                <Modal\n                    size=\"lg\"\n                    aria-labelledby=\"contained-modal-title-vcenter\"\n                    centered\n                    show={this.state.isOpen}\n                    onHide={this.closeModal} \n                    >\n                    <Modal.Header closeButton>\n                    <Modal.Title> Your order </Modal.Title>\n                    </Modal.Header>\n                        \n                    <Modal.Body>\n                        Products list:\n                        {\n                            this.props.productsInShoppingCard.length > 0\n                            ? (\n                            <Table bordered  >\n                            <thead>\n                                <tr>\n                                    <td>Продукт</td>\n                                    <td>Назва</td>\n                                    <td>Кількість</td>\n                                    <td>Ціна</td>\n                                    <td></td>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    this.props.productsInShoppingCard.map(productInCard => (  \n                                        <tr key={this.props.productsInShoppingCard.indexOf(productInCard)} >\n                                            <td>\n                                                <Card.Img variant=\"top\" src={img123} alt='some picture' className='imgInShoppingCard'/>\n                                            </td>\n                                            <td>{productInCard.product} \"{productInCard.name}\"</td>\n                                            <td>\n                                                <div className='counter' >\n                                                    {\n                                                        productInCard.number == '1'\n                                                    ?\n                                                    <ButtonGroup>\n                                                        <Button variant='danger' disabled\n                                                        onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                        <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                        <Button variant='primary' \n                                                        onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                    </ButtonGroup>\n                                                    :<div>\n                                                        {\n                                                         productInCard.number == productInCard.amount\n                                                         ?\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' disabled\n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                         :\n                                                        <ButtonGroup>\n                                                            <Button variant='danger' \n                                                            onClick={() => this.props.decrement(productInCard.id)} >-</Button>\n                                                            <h2 style={{ color: 'black' }} > {productInCard.number} </h2>\n                                                            <Button variant='primary' \n                                                            onClick={() => this.props.increment(productInCard.id)} >+</Button>\n                                                        </ButtonGroup>\n                                                        }\n                                                    </div>\n                                                    }\n                                                </div>\n                                            </td>\n                                            <td> {oneProductPrice(productInCard.price, productInCard.number)}</td>\n                                            <td>\n                                                <Button\n                                                className='buttnonInShoppingCard'\n                                                variant='danger'\n                                                onClick={() => this.props.removeFromCard(productInCard.id)} \n                                                > Remove  </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n\n                            </tbody>\n                            </Table>\n                            )\n                            : <p>\n                                Your cart is empty :(\n                            </p>\n                        }\n                        \n                        <div className=\"totalPrice\" >\n                            <h2 >\n                                Sum: <Badge variant='info' > {this.getTotalPrice()} </Badge> UAH\n                            </h2>\n                        </div>        \n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={this.closeModal}>Back</Button>\n                        <Button variant='success' >\n                            Result and payment\n                        </Button>\n                    </Modal.Footer>\n\n                </Modal>\n            </>\n        )\n    }\n    \n}\n\nconst mapStateToProps = (state) => ({\n    productsInShoppingCard: state.shoppingCard,\n})\n\nconst mapDispatchToProps = {\n    removeFromCard,\n    increment,\n    decrement\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCard);","/home/julka-i-dima/vapa/src/components/products/ProductCard.js",["92","93"],"/home/julka-i-dima/vapa/src/components/products/ProductDetailsModal.js",["94"],"/home/julka-i-dima/vapa/src/components/home/Home.js",[],"/home/julka-i-dima/vapa/src/components/Map/Map.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":38,"column":69,"nodeType":"105","messageId":"106","endLine":38,"endColumn":71},{"ruleId":"103","severity":1,"message":"104","line":48,"column":42,"nodeType":"105","messageId":"106","endLine":48,"endColumn":44},{"ruleId":"103","severity":1,"message":"104","line":92,"column":78,"nodeType":"105","messageId":"106","endLine":92,"endColumn":80},{"ruleId":"103","severity":1,"message":"104","line":103,"column":79,"nodeType":"105","messageId":"106","endLine":103,"endColumn":81},{"ruleId":"99","severity":1,"message":"107","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":30,"column":41,"nodeType":"105","messageId":"106","endLine":30,"endColumn":43},{"ruleId":"103","severity":1,"message":"104","line":28,"column":33,"nodeType":"105","messageId":"106","endLine":28,"endColumn":35},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'fetchProducts' is defined but never used.","no-global-assign","no-unsafe-negation"]